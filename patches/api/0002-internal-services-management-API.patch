From 3c2a78e77de43df376e1ccb094af9957056a8754 Mon Sep 17 00:00:00 2001
From: Shane Freeder <theboyetronic@gmail.com>
Date: Sun, 17 Dec 2017 08:13:55 +0000
Subject: [PATCH] internal services management API

---
 src/main/java/org/bukkit/Bukkit.java          | 12 ++++++
 src/main/java/org/bukkit/Server.java          | 12 ++++++
 .../bukkit/plugin/SimplePluginManager.java    |  9 ++++
 .../java/pw/valaria/api/services/Chat.java    |  8 ++++
 .../valaria/api/services/InternalService.java |  6 +++
 .../api/services/InternalServiceHolder.java   | 41 +++++++++++++++++++
 .../api/services/InternalServicesManager.java | 19 +++++++++
 7 files changed, 107 insertions(+)
 create mode 100644 src/main/java/pw/valaria/api/services/Chat.java
 create mode 100644 src/main/java/pw/valaria/api/services/InternalService.java
 create mode 100644 src/main/java/pw/valaria/api/services/InternalServiceHolder.java
 create mode 100644 src/main/java/pw/valaria/api/services/InternalServicesManager.java

diff --git a/src/main/java/org/bukkit/Bukkit.java b/src/main/java/org/bukkit/Bukkit.java
index 9fab69137..3d863c886 100644
--- a/src/main/java/org/bukkit/Bukkit.java
+++ b/src/main/java/org/bukkit/Bukkit.java
@@ -50,6 +50,8 @@ import org.bukkit.generator.ChunkGenerator;
 
 import org.bukkit.inventory.ItemFactory;
 import org.bukkit.inventory.meta.ItemMeta;
+import pw.valaria.api.services.InternalService;
+import pw.valaria.api.services.InternalServicesManager;
 
 import javax.annotation.Nullable; // Paper
 import javax.annotation.Nonnull; // Paper
@@ -1537,4 +1539,14 @@ public final class Bukkit {
     {
         return server.spigot();
     }
+
+    // Alphheim start
+
+    /**
+     * @return the internal services manager
+     */
+    public static InternalServicesManager getInternalServices() {
+        return server.getInternalServices();
+    }
+    // Alphheim end
 }
diff --git a/src/main/java/org/bukkit/Server.java b/src/main/java/org/bukkit/Server.java
index ae15b0e99..d5b7bab3b 100644
--- a/src/main/java/org/bukkit/Server.java
+++ b/src/main/java/org/bukkit/Server.java
@@ -51,6 +51,7 @@ import org.bukkit.generator.ChunkGenerator;
 
 import org.bukkit.inventory.ItemFactory;
 import org.bukkit.inventory.meta.ItemMeta;
+import pw.valaria.api.services.InternalServicesManager;
 
 import javax.annotation.Nullable; // Paper
 import javax.annotation.Nonnull; // Paper
@@ -1324,4 +1325,15 @@ public interface Server extends PluginMessageRecipient {
      */
     com.destroystokyo.paper.profile.PlayerProfile createProfile(@Nullable UUID uuid, @Nullable String name);
     // Paper end
+
+    // Alphheim start
+    /**
+     * This system is primarily designed to deal with cases where we may wish
+     * to completely replace how something in the server is handled, while
+     * providing a default implementation in the server as a fallback to one being registered.
+     *
+     * @return the {@link InternalServicesManager} used in the server
+     */
+    InternalServicesManager getInternalServices();
+    // Alphheim end
 }
diff --git a/src/main/java/org/bukkit/plugin/SimplePluginManager.java b/src/main/java/org/bukkit/plugin/SimplePluginManager.java
index a7dd902fb..5f2e43791 100644
--- a/src/main/java/org/bukkit/plugin/SimplePluginManager.java
+++ b/src/main/java/org/bukkit/plugin/SimplePluginManager.java
@@ -454,6 +454,15 @@ public final class SimplePluginManager implements PluginManager {
                         + plugin.getDescription().getFullName() + " (Is it up to date?)", ex, plugin); // Paper
             }
 
+            // Alphheim start - internal services
+            try {
+                server.getInternalServices().unregisterServices(plugin);
+            } catch (Throwable ex) {
+                handlePluginException("Error occurred (in the plugin loader) while unregistering internal services for "
+                        + plugin.getDescription().getFullName() + " (Is it up to date?)", ex, plugin); // Paper
+            }
+            // Alphheim stop
+
             try {
                 HandlerList.unregisterAll(plugin);
             } catch (Throwable ex) {
diff --git a/src/main/java/pw/valaria/api/services/Chat.java b/src/main/java/pw/valaria/api/services/Chat.java
new file mode 100644
index 000000000..cb1468637
--- /dev/null
+++ b/src/main/java/pw/valaria/api/services/Chat.java
@@ -0,0 +1,8 @@
+package pw.valaria.api.services;
+
+import org.bukkit.entity.Player;
+
+public interface Chat extends InternalService {
+
+    void process(Player sender, String message);
+}
diff --git a/src/main/java/pw/valaria/api/services/InternalService.java b/src/main/java/pw/valaria/api/services/InternalService.java
new file mode 100644
index 000000000..d9f58faf0
--- /dev/null
+++ b/src/main/java/pw/valaria/api/services/InternalService.java
@@ -0,0 +1,6 @@
+package pw.valaria.api.services;
+
+public interface InternalService {
+
+    default void onDisable(){};
+}
diff --git a/src/main/java/pw/valaria/api/services/InternalServiceHolder.java b/src/main/java/pw/valaria/api/services/InternalServiceHolder.java
new file mode 100644
index 000000000..00b0c04b1
--- /dev/null
+++ b/src/main/java/pw/valaria/api/services/InternalServiceHolder.java
@@ -0,0 +1,41 @@
+package pw.valaria.api.services;
+
+import javax.annotation.Nullable;
+import org.bukkit.plugin.Plugin;
+
+public class InternalServiceHolder<T extends InternalService> {
+
+    private T internalService;
+    private Plugin plugin;
+
+    public InternalServiceHolder(T internalService) {
+        this(internalService, null);
+    }
+
+    public InternalServiceHolder(T internalService, Plugin plugin) {
+        this.internalService = internalService;
+        this.plugin = plugin;
+    }
+
+    public T getInternalService() {
+        return internalService;
+    }
+
+    @Nullable
+    public Plugin getPlugin() {
+        return plugin;
+    }
+
+    @Override
+    public boolean equals(Object obj) {
+        return this == obj || (obj instanceof InternalServiceHolder && ((InternalServiceHolder) obj).internalService == this.internalService);
+    }
+
+    @Override
+    public String toString() {
+        return "InternalServiceHolder{" +
+                "internalService=" + internalService.getClass().getName() +
+                ", plugin=" + plugin +
+                '}';
+    }
+}
diff --git a/src/main/java/pw/valaria/api/services/InternalServicesManager.java b/src/main/java/pw/valaria/api/services/InternalServicesManager.java
new file mode 100644
index 000000000..1711d7833
--- /dev/null
+++ b/src/main/java/pw/valaria/api/services/InternalServicesManager.java
@@ -0,0 +1,19 @@
+package pw.valaria.api.services;
+
+import org.bukkit.plugin.Plugin;
+
+public interface InternalServicesManager {
+    <T extends InternalService> void registerDefaultService(Class<T> serviceType, T service);
+
+
+    <T extends InternalService> boolean registerService(Class<T> serviceType, T service, Plugin owningPlugin);
+
+    <T extends InternalService> boolean registerService(Class<T> serviceType, T service, Plugin owningPlugin, boolean force);
+
+    <T extends InternalService> T getService(Class<T> serviceType);
+
+    <T extends InternalService> T unregisterService(Class<T> serviceType, T service);
+
+    boolean unregisterServices(Plugin owningPlugin);
+
+}
-- 
2.20.1

